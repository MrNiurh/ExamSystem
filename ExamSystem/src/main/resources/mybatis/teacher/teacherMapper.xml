<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="teacher.teacherMapper">
	<!-- 添加考试(需要传入教师id) -->
	<insert parameterType="pd" id="insertTest">
		insert into
		test(testname,starttime,auto_begin,tea_id) values(#{testname
		},#{starttime},#{auto_begin},#{t_id})
	</insert>

	<!-- 更新考试(需要传入教师id) -->
	<insert parameterType="pd" id="updateTest">
		update
		test set
		testname=#{testname},starttime=#{starttime},auto_begin=#{auto_begin},tea_id=#{tea_id}
		where testid=#{testid}
	</insert>

	<!-- 通过 id 查询教师 -->
	<select id="selectTeacherById" parameterType="int"
		resultType="pd">
		select * from teacher where id=#{id}
	</select>

	<!-- 查询所有考试 -->
	<select id="selectTests" resultType="pd">
		select * from test
	</select>
	<!-- 根据 id 查询考试 -->
	<select id="selectTestById" resultType="pd">
		select * from test where
		testid = #{testid}
	</select>

	<!-- 查询正在进行考试 -->
	<select id="selectNowTest" resultType="pd">
		select * from test where
		test_signal = 1
	</select>
	<!-- 查询考后 -->
	<select id="selectAfterTest" resultType="pd">
		select * from test where
		test_signal >= 1
	</select>
	<!-- 更新标志位 -->
	<update id="updateSignal" parameterType="pd">
		update test set
		test_signal=#{test_signal} where testid= #{testid}
	</update>

	<!-- 更新添加考试试卷（需要传入考试id） -->
	<update parameterType="pd" id="updateaddfile"> update teacher SET testfile=
		#{test_file }, where testid=#{testid}
	</update>

	<!-- 1查询参加考试人数 -->
	<select resultType="pd" parameterType="pd" id="selectStudent"> SELECT
		count(stuid)
		from student where testid=#{testid}
	</select>

	<!-- 2查询登录人数(调用方法获取ip是否为空) -->
	<select resultType="pd" parameterType="pd"
		id="selectLoginStudent">
		SELECT count(stuid)
		from student where ip is not null and ip !=""
		and
		testid=#{testid}
	</select>

	<!-- 3查询未登录人数(调用方法获取ip是否为空) -->
	<select resultType="pd" parameterType="pd"
		id="selectNoLoginStudent">
		SELECT count(stuid)
		from student where ip is null or ip =""
		and
		testid=#{testid}
	</select>

	<!-- 4查询提交答案的个数(调用方法获取testresult是否为空) -->
	<select resultType="pd" parameterType="pd"
		id="selectSubmitStudent">
		SELECT
		count(stuid) from student where upload is not null
		and
		testid=#{testid} and ip is not null and ip !=""
	</select>
	<!-- 4查询未提交答案的个数(调用方法获取testresult是否为空) -->
	<select resultType="pd" parameterType="pd"
		id="selectNoSubmitStudent">
		SELECT
		count(stuid) from student where upload is null
		and
		testid=#{testid} and ip is not null and ip !=""
	</select>
	<!-- 查找已登录学生(通过学号姓名班级) -->
	<select resultType="pd" parameterType="pd"
		id="selectinfoStudent">
		SELECT
		* from student where testid=#{testid} and ip is not null and ip
		!=""
		<if test="stuid != null and stuid != ''">and stuid like "%"#{stuid}"%"</if>
		<if test="stuname != null and stuname != ''">and stuname like "%"#{stuname}"%"</if>
		<if test="stuclass != null and stuclass != ''">and stuclass like "%"#{stuclass}"%"</if>
	</select>
	<!-- 查找未登录学生(通过学号姓名班级) -->
	<select resultType="pd" parameterType="pd" id="selectAllStudent">
		SELECT
		* from student where testid=#{testid}
		<if test="stuid != null and stuid != ''">and stuid like "%"#{stuid}"%"</if>
		<if test="stuname != null and stuname != ''">and stuname like "%"#{stuname}"%"</if>
		<if test="stuclass != null and stuclass != ''">and stuclass like "%"#{stuclass}"%"</if>
	</select>

	<!-- 查找已登录学生(通过ip) -->
	<select resultType="pd" parameterType="String"
		id="selectStudentByIp">
		SELECT
		* from student where testid=#{testid} and ip is not null and ip
		!=""
		<if test=" ip !=null and ip !=''">and ip like "%"#{ip}"%"</if>
	</select>

	<!-- 添加通知（需要考试id） -->
	<insert parameterType="pd" id="insertTestmsg">
		insert into testmsg (msg,testid)
		values(#{msg },#{testid})
	</insert>

	<!-- 删除通知(传入通知id) -->
	<delete parameterType="String" id="deleteTestmsg">
		DELETE FROM testmsg WHERE
		testmsg_id=#{ testmsg_id }
	</delete>

	<!-- 添加学生(传入stunum，stuname，stuclass) -->
	<insert parameterType="pd" id="insertStudent">
		insert into student
		(stuid,stuname,stuclass,testid)
		values(#{stuid},#{stuname},#{stuclass},#{testid})
	</insert>

</mapper>